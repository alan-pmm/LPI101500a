#-- 101.1 (lesson 1) Determine and configure hardware settings
#-- Shows all devices currently connected to the PCI (Peripheral Component Interconnect) bus.

#-- vocabulary importants :
# > IDE : Integrated Drive Electronics (LEGACY as parrallele wires)
# > PATA : Parallel Advanced Technology Attachment
# > SATA : Serial Advanced Technology Attachment, ou S-ATA
# > SCSI: Small Computer System Interface


#--command 'lspci' (Peripheral Component Interconnect) bus. It works for machines having a PC bus, hence a Rasbery Pi has no bus then no 'lspci' command.


alain@ubuntuserver22:~$ lspci
00:00.0 Host bridge: Intel Corporation 440FX - 82441FX PMC [Natoma] (rev 02)
00:01.0 ISA bridge: Intel Corporation 82371SB PIIX3 ISA [Natoma/Triton II]
00:01.1 IDE interface: Intel Corporation 82371AB/EB/MB PIIX4 IDE (rev 01)
00:02.0 VGA compatible controller: VMware SVGA II Adapter
00:03.0 Ethernet controller: Intel Corporation 82540EM Gigabit Ethernet Controll                                     er (rev 02)
00:04.0 System peripheral: InnoTek Systemberatung GmbH VirtualBox Guest Service
00:05.0 Multimedia audio controller: Intel Corporation 82801AA AC'97 Audio Contr                                     oller (rev 01)
00:06.0 USB controller: Apple Inc. KeyLargo/Intrepid USB
00:07.0 Bridge: Intel Corporation 82371AB/EB/MB PIIX4 ACPI (rev 08)
00:0b.0 USB controller: Intel Corporation 82801FB/FBM/FR/FW/FRW (ICH6 Family) US                                     B2 EHCI Controller
00:0d.0 SATA controller: Intel Corporation 82801HM/HEM (ICH8M/ICH8M-E) SATA Cont                                     roller [AHCI mode] (rev 02)

#--command 'lsusb' (Universal Serial Bus)

#--Lists USB (Universal Serial Bus) devices currently connected to the machine
alain@ubuntuserver22:~$ lsusb
Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
Bus 002 Device 002: ID 80ee:0021 VirtualBox USB Tablet
Bus 002 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub


#--The command lspci shows more details about a specific device if its address is given with option -s
alain@ubuntuserver22:~$ lspci -s 00:01.0
00:01.0 ISA bridge: Intel Corporation 82371SB PIIX3 ISA [Natoma/Triton II]

#--more with, accompanied by the option combined -s -v
alain@ubuntuserver22:~$ lspci -s 00:01.0 -v
00:01.0 ISA bridge: Intel Corporation 82371SB PIIX3 ISA [Natoma/Triton II]
        Flags: bus master, medium devsel, latency 0

#--more again with, accompanied by the option combined -s -v
alain@ubuntuserver22:~$ lspci -s 00:01.0 -vv
00:01.0 ISA bridge: Intel Corporation 82371SB PIIX3 ISA [Natoma/Triton II]
        Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx-
        Status: Cap- 66MHz- UDF- FastB2B- ParErr- DEVSEL=medium >TAbort- <TAbort- <MAbort- >SERR- <PERR- INTx-
        Latency: 0

# -- 101.1 (lesson 1) Determine and configure hardware settings 
# -- exercice 3 page 14 (1)		
#--'lspci' real example to see kernel from module 00:06	
katia@mavmlinux:~$ lspci -s 00:06
00:06.0 USB controller: Apple Inc. KeyLargo/Intrepid USB

#--'lspci' real example to see kernel from module 00:06 with -k option
katia@mavmlinux:~$ lspci -s 00:06 -k
00:06.0 USB controller: Apple Inc. KeyLargo/Intrepid USB
	Kernel driver in use: ohci-pci		
		
#-- verify which kernel module is in use for the specified device is provided by the option -k,
alain@ubuntuserver22:~$ lspci -s 00:01.0 -k
00:01.0 ISA bridge: Intel Corporation 82371SB PIIX3 ISA [Natoma/Triton II]

katia@mavmlinux:~$ modinfo ohci-pci
name:           ohci_pci
filename:       (builtin)
softdep:        pre: ehci_pci
license:        GPL
file:           drivers/usb/host/ohci-pci
description:    OHCI PCI platform driver

katia@mavmlinux:~$ modprobe -r ohci-pci
modprobe: FATAL: Module ohci_pci is builtin.

katia@mavmlinux:~$ modinfo -p ohci-pci

katia@mavmlinux:~$ depmod ohci-pci
depmod: ERROR: Bad version passed ohci-pci


#--Command 'lsusb' shows the available USB channels and the devices connected to them. like lspci option 
#  -v displays more detailed output. 
#  -d specific device can be selected for inspection by providing its ID

alain@ubuntuserver22:~$ lsusb -v -d 1d6b:0002
Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
Couldn't open device, some information will be missing
Device Descriptor:
  bLength                18
  bDescriptorType         1
  bcdUSB               2.00
  bDeviceClass            9 Hub
  bDeviceSubClass         0
  bDeviceProtocol         0 Full speed (or root) hub
  bMaxPacketSize0        64
  idVendor           0x1d6b Linux Foundation
  idProduct          0x0002 2.0 root hub
  bcdDevice            5.15
  iManufacturer           3 Linux 5.15.0-88-generic ehci_hcd
  iProduct                2 EHCI Host Controller
  iSerial                 1 0000:00:0b.0
  bNumConfigurations      1
  Configuration Descriptor:
    bLength                 9
    bDescriptorType         2
    wTotalLength       0x0019
    bNumInterfaces          1
    bConfigurationValue     1
    iConfiguration          0
    bmAttributes         0xe0
      Self Powered
      Remote Wakeup
    MaxPower                0mA
    Interface Descriptor:
      bLength                 9
      bDescriptorType         4
      bInterfaceNumber        0
      bAlternateSetting       0
      bNumEndpoints           1
      bInterfaceClass         9 Hub
      bInterfaceSubClass      0
      bInterfaceProtocol      0 Full speed (or root) hub
      iInterface              0
      Endpoint Descriptor:
        bLength                 7
        bDescriptorType         5
        bEndpointAddress     0x81  EP 1 IN
        bmAttributes            3
          Transfer Type            Interrupt
          Synch Type               None
          Usage Type               Data
        wMaxPacketSize     0x0004  1x 4 bytes
        bInterval              12

#--With option -t, command lsusb shows the current USB device mappings as a hierarchical tree -- page 7
alain@ubuntuserver22:~$ lsusb -t
/:  Bus 02.Port 1: Dev 1, Class=root_hub, Driver=ohci-pci/12p, 12M
    |__ Port 1: Dev 2, If 0, Class=Human Interface Device, Driver=usbhid, 12M
/:  Bus 01.Port 1: Dev 1, Class=root_hub, Driver=ehci-pci/12p, 480M

#--works also with lspci and -t option and -v option (optionally)

alain@ubuntuserver22:~$ lspci -vt
-[0000:00]-+-00.0  Intel Corporation 440FX - 82441FX PMC [Natoma]
           +-01.0  Intel Corporation 82371SB PIIX3 ISA [Natoma/Triton II]
           +-01.1  Intel Corporation 82371AB/EB/MB PIIX4 IDE
           +-02.0  VMware SVGA II Adapter
           +-03.0  Intel Corporation 82540EM Gigabit Ethernet Controller
           +-04.0  InnoTek Systemberatung GmbH VirtualBox Guest Service
           +-05.0  Intel Corporation 82801AA AC'97 Audio Controller
           +-06.0  Apple Inc. KeyLargo/Intrepid USB
           +-07.0  Intel Corporation 82371AB/EB/MB PIIX4 ACPI
           +-0b.0  Intel Corporation 82801FB/FBM/FR/FW/FRW (ICH6 Family) USB2 EHCI Controller
           \-0d.0  Intel Corporation 82801HM/HEM (ICH8M/ICH8M-E) SATA Controller [AHCI mode]


#-- Not all devices have corresponding modules. 

alain@ubuntuserver22:~$ lsusb -s 1
Bus 001 Device 001: ID 1d6b:0002 Linux Foundation 2.0 root hub
Bus 002 Device 001: ID 1d6b:0001 Linux Foundation 1.1 root hub

alain@ubuntuserver22:~$ lsusb -s 2
Bus 002 Device 002: ID 80ee:0021 VirtualBox USB Tablet

#-- Both Bus and Dev numbers should be given to the -s option of the lsusb command
alain@ubuntuserver22:~$ lsusb -s 2:2
Bus 002 Device 002: ID 80ee:0021 VirtualBox USB Tablet

#--We can find a lot of loaded kernel modules in a standard Linux, viewable using 'kmod' package

#  Linux kernel modules related to hardware devices are also called drivers

#--command 'lsmod' shows all currently loaded modules:
#  3 COLUMNS :
#  Module : Module name.
#  Size : Amount of RAM occupied by the module, in bytes.
#  Used by : Depending modules.

alain@ubuntuserver22:~$ lsmod | head -n 7
Module                  Size  Used by
vboxsf                 36864  0
vboxguest              45056  3 vboxsf
vboxvideo              28672  0
drm_vram_helper        24576  1 vboxvideo
drm_ttm_helper         16384  2 drm_vram_helper,vboxvideo
binfmt_misc            24576  1


# -- command 'modprobe':
# as long as they are not being used by a running process, command modprobe -r should be used.
alain@ubuntuserver22:~$ modprobe -r vboxguest
modprobe: FATAL: Module vboxguest is in use.

alain@ubuntuserver22:~$ modprobe -r drm_vram_helper
modprobe: FATAL: Module drm_vram_helper is in use.

alain@ubuntuserver22:~$ modprobe -r snd_ac97_codec
modprobe: FATAL: Module snd_ac97_codec is in use.

# command 'modinfo' shows a description, the file,the author, the license, the identification, the dependencies and the available parameters for the given module. Option -p will make command modinfo display all available parameters and ignore the other information.

alain@ubuntuserver22:~$ modinfo -p snd_ac97_codec
enable_loopback:Enable AC97 ADC/DAC Loopback Control (bool)
power_save:Automatic power-saving timeout (in second, 0 = disable). (int)

# command 'modinfo' without option

alain@ubuntuserver22:~$ modinfo snd_ac97_codec
filename:       /lib/modules/5.15.0-88-generic/kernel/sound/pci/ac97/snd-ac97-codec.ko
license:        GPL
description:    Universal interface for Audio Codec '97
author:         Jaroslav Kysela <perex@perex.cz>
srcversion:     1FD0F36AF953EF83BBC58CD
depends:        snd,snd-pcm,ac97_bus
retpoline:      Y
intree:         Y
name:           snd_ac97_codec
vermagic:       5.15.0-88-generic SMP mod_unload modversions
sig_id:         PKCS#7
signer:         Build time autogenerated kernel key
sig_key:        1E:90:54:F5:F2:F5:58:6D:E9:90:EB:09:88:88:6A:2E:8D:1A:E8:0B
sig_hashalgo:   sha512
signature:      59:7E:4C:9A:3E:B7:28:93:80:B0:CE:2A:63:68:02:B1:07:DD:CC:A4:
                2C:DB:3D:56:75:6E:03:25:B5:94:32:3D:D6:93:58:2D:F6:3F:15:C7:
  .....
parm:           enable_loopback:Enable AC97 ADC/DAC Loopback Control (bool)
parm:           power_save:Automatic power-saving timeout (in second, 0 = disable). (int)


# If a module is causing problems, the file /etc/modprobe.d/blacklist.conf can be used to block the loading of the module. 
alain@ubuntuserver22:~$ ls /etc/modprobe.d/
amd64-microcode-blacklist.conf  blacklist-firewire.conf      intel-microcode-blacklist.conf
blacklist-ath_pci.conf          blacklist-framebuffer.conf   iwlwifi.conf
blacklist.conf                  blacklist-rare-network.conf  mdadm.conf


# 'modinfo' option -a shows the author of the module 
alain@ubuntuserver22:~$ modinfo -a snd_ac97_codec
Jaroslav Kysela <perex@perex.cz>

alain@ubuntuserver22:~$ modinfo -k snd_ac97_codec
modinfo: ERROR: missing module or filename.


# modinfo ... -h option to show help! :-)
alain@ubuntuserver22:~$ modinfo -h snd_ac97_codec
Usage:
        modinfo [options] filename [args]
Options:
        -a, --author                Print only 'author'
        -d, --description           Print only 'description'
        -l, --license               Print only 'license'
        -p, --parameters            Print only 'parm'
        -n, --filename              Print only 'filename'
        -0, --null                  Use \0 instead of \n
        -F, --field=FIELD           Print only provided FIELD
        -k, --set-version=VERSION   Use VERSION instead of `uname -r`
        -b, --basedir=DIR           Use DIR as filesystem root for /lib/modules
        -V, --version               Show version
        -h, --help                  Show this help

# modinfo -n option to show library location 
alain@ubuntuserver22:~$ modinfo -n snd_ac97_codec
/lib/modules/5.15.0-88-generic/kernel/sound/pci/ac97/snd-ac97-codec.ko


# modinfo -l option to show licence. it is a GPL of course :-)
alain@ubuntuserver22:~$ modinfo -l snd_ac97_codec
GPL

# modinfo -F option to show field.. NOK
alain@ubuntuserver22:~$ modinfo -F snd_ac97_codec
modinfo: ERROR: missing module or filename.

# modinfo with -V to show the 'kmod' version
alain@ubuntuserver22:~$ modinfo -V snd_ac97_codec
kmod version 29
+ZSTD +XZ -ZLIB +LIBCRYPTO -EXPERIMENTAL

# /proc and /sys are called pseudo filesystem. They are mount points to filesystems not present in a device partition, but only in RAM space used by the kernel to store runtime configuration and information on running processes. 

# '/proc/cpuinfo' lists detailed information about the CPU(s) found by the operating system.
alain@ubuntuserver22:~$ cat ll /proc/cpuinfo
cat: ll: No such file or directory
processor       : 0
vendor_id       : GenuineIntel
cpu family      : 6
model           : 140
model name      : 11th Gen Intel(R) Core(TM) i5-1145G7 @ 2.60GHz
stepping        : 1
microcode       : 0xffffffff
cpu MHz         : 2611.368
cache size      : 8192 KB
physical id     : 0
siblings        : 1
core id         : 0
cpu cores       : 1
apicid          : 0
initial apicid  : 0
fpu             : yes
fpu_exception   : yes
cpuid level     : 22
wp              : yes
flags           : fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx rdtscp lm constant_tsc rep_good nopl xtopology nonstop_tsc cpuid tsc_known_freq pni pclmulqdq ssse3 cx16 pcid sse4_1 sse4_2 movbe popcnt aes rdrand hypervisor lahf_lm abm 3dnowprefetch invpcid_single ibrs_enhanced fsgsbase bmi1 bmi2 invpcid rdseed clflushopt md_clear flush_l1d arch_capabilities
bugs            : spectre_v1 spectre_v2 spec_store_bypass swapgs retbleed eibrs_pbrsb
bogomips        : 5222.73
clflush size    : 64
cache_alignment : 64
address sizes   : 39 bits physical, 48 bits virtual
power management:


# '/proc/interrupts' :A list of numbers of the interrupts per IO device for each CPU.

alain@ubuntuserver22:~$ cat /proc/interrupts
           CPU0
  0:         44   IO-APIC   2-edge      timer
  1:          9   IO-APIC   1-edge      i8042
  8:          0   IO-APIC   8-edge      rtc0
  9:          0   IO-APIC   9-fasteoi   acpi
 12:        158   IO-APIC  12-edge      i8042
 14:          0   IO-APIC  14-edge      ata_piix
 15:        880   IO-APIC  15-edge      ata_piix
 18:       3113   IO-APIC  18-fasteoi   vmwgfx
 19:       2732   IO-APIC  19-fasteoi   ehci_hcd:usb1, enp0s3
 20:        300   IO-APIC  20-fasteoi   vboxguest
 21:      21389   IO-APIC  21-fasteoi   ahci[0000:00:0d.0], snd_intel8x0
 22:         25   IO-APIC  22-fasteoi   ohci_hcd:usb2
NMI:          0   Non-maskable interrupts
LOC:     187994   Local timer interrupts
SPU:          0   Spurious interrupts
PMI:          0   Performance monitoring interrupts
IWI:          0   IRQ work interrupts
RTR:          0   APIC ICR read retries
RES:          0   Rescheduling interrupts
CAL:          0   Function call interrupts
TLB:          0   TLB shootdowns
TRM:          0   Thermal event interrupts
THR:          0   Threshold APIC interrupts
DFR:          0   Deferred Error APIC interrupts
MCE:          0   Machine check exceptions
MCP:          3   Machine check polls
ERR:          0
MIS:          0
PIN:          0   Posted-interrupt notification event
NPI:          0   Nested posted-interrupt event
PIW:          0   Posted-interrupt wakeup event



#-- /proc/ioports : Lists currently registered Input/Output port regions in use. (page 11) 
alain@ubuntuserver22:~$ cat /proc/ioports
0000-0000 : PCI Bus 0000:00
  0000-0000 : dma1
  0000-0000 : pic1
  0000-0000 : timer0
  0000-0000 : timer1
  0000-0000 : keyboard
  0000-0000 : keyboard
  0000-0000 : rtc_cmos
    0000-0000 : rtc0
  0000-0000 : dma page reg
  0000-0000 : pic2
  0000-0000 : dma2
  0000-0000 : fpu
  0000-0000 : 0000:00:01.1
    0000-0000 : ata_piix
  0000-0000 : 0000:00:01.1
    0000-0000 : ata_piix
  0000-0000 : 0000:00:01.1
    0000-0000 : ata_piix
  0000-0000 : vga+
  0000-0000 : 0000:00:01.1
    0000-0000 : ata_piix
0000-0000 : PCI conf1
0000-0000 : PCI Bus 0000:00
  0000-0000 : 0000:00:07.0
    0000-0000 : ACPI PM1a_EVT_BLK
    0000-0000 : ACPI PM1a_CNT_BLK
    0000-0000 : ACPI PM_TMR
    0000-0000 : ACPI GPE0_BLK
  0000-0000 : 0000:00:07.0
    0000-0000 : piix4_smbus
  0000-0000 : 0000:00:01.1
    0000-0000 : ata_piix
  0000-0000 : 0000:00:02.0
    0000-0000 : vmwgfx probe
  0000-0000 : 0000:00:03.0
    0000-0000 : e1000
  0000-0000 : 0000:00:04.0
    0000-0000 : vboxguest
  0000-0000 : 0000:00:05.0
    0000-0000 : Intel 82801AA-ICH
  0000-0000 : 0000:00:05.0
    0000-0000 : Intel 82801AA-ICH
  0000-0000 : 0000:00:0d.0
    0000-0000 : ahci
  0000-0000 : 0000:00:0d.0
    0000-0000 : ahci
  0000-0000 : 0000:00:0d.0
    0000-0000 : ahci
  0000-0000 : 0000:00:0d.0
    0000-0000 : ahci
  0000-0000 : 0000:00:0d.0
    0000-0000 : ahci
# /proc and /sys directory have similar roles, see note 'page 11'
#--'/proc' contains kernel data structures, including running processes
#--'/sys' store device information and kernel data related to hardware

#--'/dev' this repo is the storage device
# for IDE (legacy HDD) partition are /dev/hda1, /dev/hda2
# for floppy disk /dev/fdO,/dev/fd1, etc

# From Linux kernel version 2.4 onwards, most storage devices are now identified as if they were SCSI devices, regardless of their hardware type. IDE, SSD and USB block devices will be prefixed by sd.

alain@ubuntuserver22:~$ df -h
Filesystem      Size  Used Avail Use% Mounted on
tmpfs           197M  1.3M  196M   1% /run
/dev/sda2       232G  7.9G  212G   4% /
tmpfs           983M     0  983M   0% /dev/shm
tmpfs           5.0M     0  5.0M   0% /run/lock
/dev/sda5       250G   24M  237G   1% /home
/dev/sda3       265M  245M     0 100% /boot
tmpfs           197M  4.0K  197M   1% /run/user/1001

#--! Exeptions ! '/dev/mmcblk0p' and '/dev/nvme0n'
# For SD cards, the paths is /dev/mmcblk0p1, /dev/mmcblk0p2
# For NVMe devices, the paths is /dev/nvme0n1p1 and /dev/nvme0n1p2


#--'udev' Removable devices are handled by the udev subsystem, dinamically created in /dev.
#   Udev relies on SysFS, the pseudo filesystem for hardware related information mounted in /sys.
# 	Udev identificate devices present during machine power-up = "coldplug detection"
# 	Udev identificate devices while the system is running (hotplug detection)

#--'Hotplug' = detection while system running, system buses (PCI, USB, etc.)

#--'udev' has its rules stored in the directory /etc/udev/rules.d/.
alain@ubuntuserver22:~$ ls /etc/udev/rules.d/
60-vboxadd.rules  70-snap.snapd.rules

#--'/etc/udev'
alain@ubuntuserver22:~$ cat /etc/udev/rules.d/60-vboxadd.rules
KERNEL=="vboxguest", NAME="vboxguest", OWNER="vboxadd", MODE="0660"
KERNEL=="vboxuser", NAME="vboxuser", OWNER="vboxadd", MODE="0666"

#--'/sys' content first depth
alain@ubuntuserver22:~$ tree -L 1 /sys/
/sys/
├── block
├── bus
├── class
├── dev
├── devices
├── firmware
├── fs
├── hypervisor
├── kernel
├── module
└── power



# -- 101.1 (lesson 1) Determine and configure hardware settings 
# -- exercice 3 page 14 (2)
katia@mavmlinux:~$ lspci -s 03.0
00:03.0 Ethernet controller: Intel Corporation 82540EM Gigabit Ethernet Controller (rev 02)

# -- method with option -k
katia@mavmlinux:~$ lspci -s 03.0 -k
00:03.0 Ethernet controller: Intel Corporation 82540EM Gigabit Ethernet Controller (rev 02)
	Subsystem: Intel Corporation PRO/1000 MT Desktop Adapter
	Kernel driver in use: e1000
	Kernel modules: e1000
	
# -- method with option -v
katia@mavmlinux:~$ lspci -s 03.0 -v
00:03.0 Ethernet controller: Intel Corporation 82540EM Gigabit Ethernet Controller (rev 02)
	Subsystem: Intel Corporation PRO/1000 MT Desktop Adapter
	Flags: bus master, 66MHz, medium devsel, latency 64, IRQ 19
	Memory at f0200000 (32-bit, non-prefetchable) [size=128K]
	I/O ports at d020 [size=8]
	Capabilities: <access denied>
	Kernel driver in use: e1000
	Kernel modules: e1000	
	
# -- method with option -vv	
katia@mavmlinux:~$ lspci -s 03.0 -vv
00:03.0 Ethernet controller: Intel Corporation 82540EM Gigabit Ethernet Controller (rev 02)
	Subsystem: Intel Corporation PRO/1000 MT Desktop Adapter
	Control: I/O+ Mem+ BusMaster+ SpecCycle- MemWINV- VGASnoop- ParErr- Stepping- SERR- FastB2B- DisINTx-
	Status: Cap+ 66MHz+ UDF- FastB2B- ParErr- DEVSEL=medium >TAbort- <TAbort- <MAbort- >SERR- <PERR- INTx-
	Latency: 64 (63750ns min)
	Interrupt: pin A routed to IRQ 19
	Region 0: Memory at f0200000 (32-bit, non-prefetchable) [size=128K]
	Region 2: I/O ports at d020 [size=8]
	Capabilities: <access denied>
	Kernel driver in use: e1000
	Kernel modules: e1000

# -- 'lsmod' 'grep' to find relationship between both commands	
katia@mavmlinux:~$ lsmod | grep e1000
e1000                 159744  0

# -- 
katia@mavmlinux:~$ modprobe -r e1000
modprobe: ERROR: ../libkmod/libkmod-module.c:799 kmod_module_remove_module() could not remove 'e1000': Operation not permitted

# -- 
katia@mavmlinux:~$ modinfo -p e1000
TxDescriptors:Number of transmit descriptors (array of int)
RxDescriptors:Number of receive descriptors (array of int)
Speed:Speed setting (array of int)
Duplex:Duplex setting (array of int)
AutoNeg:Advertised auto-negotiation setting (array of int)
FlowControl:Flow Control setting (array of int)
XsumRX:Disable or enable Receive Checksum offload (array of int)
TxIntDelay:Transmit Interrupt Delay (array of int)
TxAbsIntDelay:Transmit Absolute Interrupt Delay (array of int)
RxIntDelay:Receive Interrupt Delay (array of int)
RxAbsIntDelay:Receive Absolute Interrupt Delay (array of int)
InterruptThrottleRate:Interrupt Throttling Rate (array of int)
SmartPowerDownEnable:Enable PHY smart power down (array of int)
copybreak:Maximum size of packet that is copied to a new buffer on receive (uint)
debug:Debug level (0=none,...,16=all) (int)
#--
katia@mavmlinux:~$ depmod e1000
depmod: ERROR: Bad version passed e1000


#--101.2 Boot the system (page 21)

#  BIOS or UEFI are "firmware"
# UEFI = Unified Extensible Firmware Interface

# -- Boot stages
# 1 - BIOS assumes that the first 440 bytes in the 1st storage device is the bootloaeder = "bootstrap".
# 2 - MBR follows with the 512 bytes storage, based on MS-DOS partition table = "Master boot Record"

# -- Boot stages generaly speaking
# 1 POST = "Power-on Self-test! scan simple hardware failure once machine powered on.
# 2 BIOS = Components load : Video output, keyboard and storage media
# 3 MBR = load the 1st stage of the bootloder from the MBR as defined in the BIOS 
# 4      boot shows bootloader options: options and loading the kernel

#--'BIOS' VS 'UEFI' (page 21)
# UEFI can identify partitions and read the filesystems found in them. It does not rely on the MBR! 
#	Instead its takes non-volatile memory (NVRAM) attached to the motherboard.
# The UEFI manage devices compatible filesystems: FAT12, FAT16 and FAT32 for block devices and ISO-9660 for optical media


#--'UEFi' = ESP = EFI System Partition: This partition must be NOT shared with other system filesystems (page 22)

#--'UEFI' boot steps 
# 1. POST (page 22 & 23))

#--bootloader GRUB --------------------------------------(page 23)

#--'/etc/default/grub'
# The config bootloader must be generated every time
# Kernel parameters must be added  in the line GRUB_CMDLINE_LINUX to make them persistent across reboots

#-- see example raw -- > 'GRUB_CMDLINE_LINUX'
alain@ubuntuserver22:/etc/default$ cat /etc/default/grub | grep -A 7 CMD
GRUB_CMDLINE_LINUX_DEFAULT=""
GRUB_CMDLINE_LINUX=""
# Uncomment to enable BadRAM filtering, modify to suit your needs
# This works with Linux (no patch required) and with any kernel that obtains
# the memory map information from GRUB (GNU Mach, kernel of FreeBSD ...)
#GRUB_BADRAM="0x01234567,0xfefefefe,0x89abcdef,0xefefefef"
# Uncomment to disable graphical terminal (grub-pc only)
#--

#-- command 'grub-mkconfig -o /boot/grub/grub.cfg'

alain@ubuntuserver22:/etc/default$ sudo grub-mkconfig -o /boot/grub/grub.cfg
[sudo] password for alain:
Sourcing file `/etc/default/grub'
Sourcing file `/etc/default/grub.d/init-select.cfg'
Generating grub configuration file ...
Found linux image: /boot/vmlinuz-5.15.0-88-generic
Found initrd image: /boot/initrd.img-5.15.0-88-generic
Found linux image: /boot/vmlinuz-5.15.0-25-generic
Found initrd image: /boot/initrd.img-5.15.0-25-generic
Warning: os-prober will not be executed to detect other bootable partitions.
Systems on them will not be added to the GRUB boot configuration.
Check GRUB_DISABLE_OS_PROBER documentation entry.
done


#--'/proc/cmdline'
#  Once the operating system is running, the kernel parameters is available '/proc/cmdline'
alain@ubuntuserver22:/etc/default$ cat /proc/cmdline
BOOT_IMAGE=/vmlinuz-5.15.0-88-generic root=UUID=67c8c573-e0dc-4770-9002-8be1a8565e3f ro


#-- /boot/grub/grub.cfg

alain@ubuntuserver22:/$ cat /boot/grub/grub.cfg
#
# DO NOT EDIT THIS FILE
#
# It is automatically generated by grub-mkconfig using templates
# from /etc/grub.d and settings from /etc/default/grub
#

### BEGIN /etc/grub.d/00_header ###
if [ -s $prefix/grubenv ]; then
  set have_grubenv=true
  load_env
fi
if [ "${initrdfail}" = 2 ]; then
   set initrdfail=
elif [ "${initrdfail}" = 1 ]; then
   set next_entry="${prev_entry}"
   set prev_entry=
   save_env prev_entry
   if [ "${next_entry}" ]; then
      set initrdfail=2
   fi
fi
if [ "${next_entry}" ] ; then
   set default="${next_entry}"
   set next_entry=
   save_env next_entry
   set boot_once=true
else
   set default="0"
fi

if [ x"${feature_menuentry_id}" = xy ]; then
  menuentry_id_option="--id"
else
  menuentry_id_option=""
fi

export menuentry_id_option

if [ "${prev_saved_entry}" ]; then
  set saved_entry="${prev_saved_entry}"
  save_env saved_entry
  set prev_saved_entry=
  save_env prev_saved_entry
  set boot_once=true
fi

function savedefault {
  if [ -z "${boot_once}" ]; then
    saved_entry="${chosen}"
    save_env saved_entry
  fi
}
function initrdfail {
    if [ -n "${have_grubenv}" ]; then if [ -n "${partuuid}" ]; then
      if [ -z "${initrdfail}" ]; then
        set initrdfail=1
        if [ -n "${boot_once}" ]; then
          set prev_entry="${default}"
          save_env prev_entry
        fi
      fi
      save_env initrdfail
    fi; fi
}
function recordfail {
  set recordfail=1
  if [ -n "${have_grubenv}" ]; then if [ -z "${boot_once}" ]; then save_env recordfail; fi; fi
}
function load_video {
  if [ x$feature_all_video_module = xy ]; then
    insmod all_video
  else
    insmod efi_gop
    insmod efi_uga
    insmod ieee1275_fb
    insmod vbe
    insmod vga
    insmod video_bochs
    insmod video_cirrus
  fi
}

if [ x$feature_default_font_path = xy ] ; then
   font=unicode
else
insmod part_gpt
insmod ext2
set root='hd0,gpt2'
if [ x$feature_platform_search_hint = xy ]; then
  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,gpt2 --hint-efi=hd0,gpt2 --hint-baremetal=ahci0,gpt2  67c8c573-e0dc-4770-9002-8be1a8565e3f
else
  search --no-floppy --fs-uuid --set=root 67c8c573-e0dc-4770-9002-8be1a8565e3f
fi
    font="/usr/share/grub/unicode.pf2"
fi

if loadfont $font ; then
  set gfxmode=auto
  load_video
  insmod gfxterm
  set locale_dir=$prefix/locale
  set lang=en_US
  insmod gettext
fi
terminal_output gfxterm
if [ "${recordfail}" = 1 ] ; then
  set timeout=30
else
  if [ x$feature_timeout_style = xy ] ; then
    set timeout_style=hidden
    set timeout=0
  # Fallback hidden-timeout code in case the timeout_style feature is
  # unavailable.
  elif sleep --interruptible 0 ; then
    set timeout=0
  fi
fi
### END /etc/grub.d/00_header ###

### BEGIN /etc/grub.d/05_debian_theme ###
set menu_color_normal=white/black
set menu_color_highlight=black/light-gray
### END /etc/grub.d/05_debian_theme ###

### BEGIN /etc/grub.d/10_linux ###
function gfxmode {
        set gfxpayload="${1}"
        if [ "${1}" = "keep" ]; then
                set vt_handoff=vt.handoff=7
        else
                set vt_handoff=
        fi
}
if [ "${recordfail}" != 1 ]; then
  if [ -e ${prefix}/gfxblacklist.txt ]; then
    if [ ${grub_platform} != pc ]; then
      set linux_gfx_mode=keep
    elif hwmatch ${prefix}/gfxblacklist.txt 3; then
      if [ ${match} = 0 ]; then
        set linux_gfx_mode=keep
      else
        set linux_gfx_mode=text
      fi
    else
      set linux_gfx_mode=text
    fi
  else
    set linux_gfx_mode=keep
  fi
else
  set linux_gfx_mode=text
fi
export linux_gfx_mode
menuentry 'Ubuntu' --class ubuntu --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-simple-67c8c573-e0dc-4770-9002-8be1a8565e3f' {
        recordfail
        load_video
        gfxmode $linux_gfx_mode
        insmod gzio
        if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
        insmod part_gpt
        insmod ext2
        set root='hd0,gpt3'
        if [ x$feature_platform_search_hint = xy ]; then
          search --no-floppy --fs-uuid --set=root --hint-bios=hd0,gpt3 --hint-efi=hd0,gpt3 --hint-baremetal=ahci0,gpt3  2fd6f408-4bb1-4360-9709-68dbbd0017bf
        else
          search --no-floppy --fs-uuid --set=root 2fd6f408-4bb1-4360-9709-68dbbd0017bf
        fi
        linux   /vmlinuz-5.15.0-88-generic root=UUID=67c8c573-e0dc-4770-9002-8be1a8565e3f ro
        initrd  /initrd.img-5.15.0-88-generic
}
submenu 'Advanced options for Ubuntu' $menuentry_id_option 'gnulinux-advanced-67c8c573-e0dc-4770-9002-8be1a8565e3f' {
        menuentry 'Ubuntu, with Linux 5.15.0-88-generic' --class ubuntu --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-5.15.0-88-generic-advanced-67c8c573-e0dc-4770-9002-8be1a8565e3f' {
                recordfail
                load_video
                gfxmode $linux_gfx_mode
                insmod gzio
                if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
                insmod part_gpt
                insmod ext2
                set root='hd0,gpt3'
                if [ x$feature_platform_search_hint = xy ]; then
                  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,gpt3 --hint-efi=hd0,gpt3 --hint-baremetal=ahci0,gpt3  2fd6f408-4bb1-4360-9709-68dbbd0017bf
                else
                  search --no-floppy --fs-uuid --set=root 2fd6f408-4bb1-4360-9709-68dbbd0017bf
                fi
                echo    'Loading Linux 5.15.0-88-generic ...'
                linux   /vmlinuz-5.15.0-88-generic root=UUID=67c8c573-e0dc-4770-9002-8be1a8565e3f ro
                echo    'Loading initial ramdisk ...'
                initrd  /initrd.img-5.15.0-88-generic
        }
        menuentry 'Ubuntu, with Linux 5.15.0-88-generic (recovery mode)' --class ubuntu --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-5.15.0-88-generic-recovery-67c8c573-e0dc-4770-9002-8be1a8565e3f' {
                recordfail
                load_video
                insmod gzio
                if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
                insmod part_gpt
                insmod ext2
                set root='hd0,gpt3'
                if [ x$feature_platform_search_hint = xy ]; then
                  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,gpt3 --hint-efi=hd0,gpt3 --hint-baremetal=ahci0,gpt3  2fd6f408-4bb1-4360-9709-68dbbd0017bf
                else
                  search --no-floppy --fs-uuid --set=root 2fd6f408-4bb1-4360-9709-68dbbd0017bf
                fi
                echo    'Loading Linux 5.15.0-88-generic ...'
                linux   /vmlinuz-5.15.0-88-generic root=UUID=67c8c573-e0dc-4770-9002-8be1a8565e3f ro recovery nomodeset dis_ucode_ldr
                echo    'Loading initial ramdisk ...'
                initrd  /initrd.img-5.15.0-88-generic
        }
        menuentry 'Ubuntu, with Linux 5.15.0-25-generic' --class ubuntu --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-5.15.0-25-generic-advanced-67c8c573-e0dc-4770-9002-8be1a8565e3f' {
                recordfail
                load_video
                gfxmode $linux_gfx_mode
                insmod gzio
                if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
                insmod part_gpt
                insmod ext2
                set root='hd0,gpt3'
                if [ x$feature_platform_search_hint = xy ]; then
                  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,gpt3 --hint-efi=hd0,gpt3 --hint-baremetal=ahci0,gpt3  2fd6f408-4bb1-4360-9709-68dbbd0017bf
                else
                  search --no-floppy --fs-uuid --set=root 2fd6f408-4bb1-4360-9709-68dbbd0017bf
                fi
                echo    'Loading Linux 5.15.0-25-generic ...'
                linux   /vmlinuz-5.15.0-25-generic root=UUID=67c8c573-e0dc-4770-9002-8be1a8565e3f ro
                echo    'Loading initial ramdisk ...'
                initrd  /initrd.img-5.15.0-25-generic
        }
        menuentry 'Ubuntu, with Linux 5.15.0-25-generic (recovery mode)' --class ubuntu --class gnu-linux --class gnu --class os $menuentry_id_option 'gnulinux-5.15.0-25-generic-recovery-67c8c573-e0dc-4770-9002-8be1a8565e3f' {
                recordfail
                load_video
                insmod gzio
                if [ x$grub_platform = xxen ]; then insmod xzio; insmod lzopio; fi
                insmod part_gpt
                insmod ext2
                set root='hd0,gpt3'
                if [ x$feature_platform_search_hint = xy ]; then
                  search --no-floppy --fs-uuid --set=root --hint-bios=hd0,gpt3 --hint-efi=hd0,gpt3 --hint-baremetal=ahci0,gpt3  2fd6f408-4bb1-4360-9709-68dbbd0017bf
                else
                  search --no-floppy --fs-uuid --set=root 2fd6f408-4bb1-4360-9709-68dbbd0017bf
                fi
                echo    'Loading Linux 5.15.0-25-generic ...'
                linux   /vmlinuz-5.15.0-25-generic root=UUID=67c8c573-e0dc-4770-9002-8be1a8565e3f ro recovery nomodeset dis_ucode_ldr
                echo    'Loading initial ramdisk ...'
                initrd  /initrd.img-5.15.0-25-generic
        }
}

### END /etc/grub.d/10_linux ###

### BEGIN /etc/grub.d/10_linux_zfs ###
### END /etc/grub.d/10_linux_zfs ###

### BEGIN /etc/grub.d/20_linux_xen ###

### END /etc/grub.d/20_linux_xen ###

### BEGIN /etc/grub.d/30_os-prober ###
### END /etc/grub.d/30_os-prober ###

### BEGIN /etc/grub.d/30_uefi-firmware ###
### END /etc/grub.d/30_uefi-firmware ###

### BEGIN /etc/grub.d/35_fwupd ###
### END /etc/grub.d/35_fwupd ###

### BEGIN /etc/grub.d/40_custom ###
# This file provides an easy way to add custom menu entries.  Simply type the
# menu entries you want to add after this comment.  Be careful not to change
# the 'exec tail' line above.
### END /etc/grub.d/40_custom ###

### BEGIN /etc/grub.d/41_custom ###
if [ -f  ${config_directory}/custom.cfg ]; then
  source ${config_directory}/custom.cfg
elif [ -z "${config_directory}" -a -f  $prefix/custom.cfg ]; then
  source $prefix/custom.cfg
fi
### END /etc/grub.d/41_custom ###
